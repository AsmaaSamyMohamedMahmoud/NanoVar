
### Radar plots for F1 scores of different SV class characterized by SV callers

## Segregate ground truth SVs by SV class
# For 32k SV genome
grep -i 'del' total_sv_error400.bed > ../combine1/del_sv_wide400.bed

grep -P 'ins' total_sv_error400.bed > ../combine1/bnd_sv_wide400.bed  # Do note both TPO and del_TPO are taken into account

grep -P '\ttan' total_sv_error400.bed > ../combine1/dup_sv_wide400.bed

grep -P '\tinv' total_sv_error400.bed > ../combine1/inv_sv_wide400.bed

cd /home/cy/data/SV_simulation_RSVsim/repeat_bias_hg19/homo/seed1_ins

# For 10k SV genome
cp total_sv_error400.bed ../combine1/ins_sv_wide400.bed


# Homozygous SV
# NanoVar
awk -F'\t' '{if ($5>=1.0) print $0}' ./nanovar/hg19_SV.output.total.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./nanovar/hg19_SV.output.total.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./nanovar/hg19_SV.output.total.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./nanovar/hg19_SV.output.total.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./nanovar/hg19_SV.output.total.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/nanovar/hg19_SV.output.total.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/nanovar/hg19_SV.output.total.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/nanovar/hg19_SV.output.total.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/nanovar/hg19_SV.output.total.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/nanovar/hg19_SV.output.total.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Sniffles
awk -F'\t' '{print $0}' ./sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DUP" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DUP" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# SVIM
awk -F'\t' '{print $0}' ./svim/final_results.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./svim/final_results.removedN.bed | grep "BND" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./svim/final_results.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./svim/final_results.removedN.bed | grep "<DUP" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./svim/final_results.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/svim/final_results.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/svim/final_results.removedN.bed | grep "BND" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/svim/final_results.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/svim/final_results.removedN.bed | grep "<DUP" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/svim/final_results.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# NanoSV
awk -F'\t' '{print $0}' ./nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./nanoSV/hg19_SV-nanosv.removedN.bed  | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Picky
awk -F'\t' '{print $0}' ./picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "BND" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "BND" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# novoBreak
awk -F'\t' '{if ($5>=27.5) print $0}' ./novobreak/novoBreak.pass.flt.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ./novobreak/novoBreak.pass.flt.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ./novobreak/novoBreak.pass.flt.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ./novobreak/novoBreak.pass.flt.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ./novobreak/novoBreak.pass.flt.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{if ($5>=27.5) print $0}' ._ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ._ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ._ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ._ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ._ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Delly
awk -F'\t' '{print $0}' ./delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Analysis
cd nanovar
echo "NanoVar" > ../radar_info.txt

# Loop commands (Copy and paste)
bedtools intersect -wa -wb -a del.bed -b ../del_sv_wide400.bed > del-tp.bed
echo "DEL" >> ../radar_info.txt

# Recall
cut -f 10 del-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 del-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 del.bed | sort | uniq) <(cut -f 6 del-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a bnd.bed -b ../bnd_sv_wide400.bed > bnd-tp.bed
echo "BND" >> ../radar_info.txt
# Recall
cut -f 10 bnd-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 bnd-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 bnd.bed | sort | uniq) <(cut -f 6 bnd-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a inv.bed -b ../inv_sv_wide400.bed > inv-tp.bed
echo "INV" >> ../radar_info.txt
# Recall
cut -f 10 inv-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 inv-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 inv.bed | sort | uniq) <(cut -f 6 inv-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a dup.bed -b ../dup_sv_wide400.bed > dup-tp.bed
echo "DUP" >> ../radar_info.txt
# Recall
cut -f 10 dup-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 dup-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 dup.bed | sort | uniq) <(cut -f 6 dup-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a ins.bed -b ../ins_sv_wide400.bed > ins-tp.bed
echo "INS" >> ../radar_info.txt
# Recall
cut -f 10 ins-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 ins-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 ins.bed | sort | uniq) <(cut -f 6 ins-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt
#End loop


cd sniffles
echo "Sniffles" >> ../radar_info.txt
# Paste above

cd svim
echo "SVIM" >> ../radar_info.txt
# Paste above

cd nanoSV
echo "NanoSV" >> ../radar_info.txt
# Paste above

cd picky
echo "Picky" >> ../radar_info.txt
# Paste above

cd novobreak
echo "novoBreak" >> ../radar_info.txt
# Paste above

cd delly
echo "Delly" >> ../radar_info.txt
# Paste above


# Heterozygous SV
# NanoVar
awk -F'\t' '{if ($5>=1.0) print $0}' ./4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ./4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{if ($5>=1.0) print $0}' ._ins/4x/nanovar/hg19_SV.output.total.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Sniffles
awk -F'\t' '{print $0}' ./4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DUP" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<DUP" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/sniffles/hg19_SV.ONT.hg19_ucsc-ngmlr.sniffles.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# SVIM
awk -F'\t' '{print $0}' ./4x/svim/final_results.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./4x/svim/final_results.removedN.bed | grep "BND" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./4x/svim/final_results.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./4x/svim/final_results.removedN.bed | grep "<DUP" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./4x/svim/final_results.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/4x/svim/final_results.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/svim/final_results.removedN.bed | grep "BND" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/svim/final_results.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/svim/final_results.removedN.bed | grep "<DUP" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/svim/final_results.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# NanoSV
awk -F'\t' '{print $0}' ./4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./4x/nanoSV/hg19_SV-nanosv.removedN.bed  | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/nanoSV/hg19_SV-nanosv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Picky
awk -F'\t' '{print $0}' ./4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ./4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "BND" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ./4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ./4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ./4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ._ins/4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "BND" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ._ins/4x/picky/hg19_SV.ONT_reads.allsv.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# novoBreak
awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1/novobreak/novoBreak.pass.flt.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1_ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1_ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<TRA>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1_ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1_ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{if ($5>=27.5) print $0}' ../seed1_ins/novobreak/novoBreak.pass.flt.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed



# Delly
awk -F'\t' '{print $0}' ../seed1/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DEL>" | bedtools sort -i - > del.bed

awk -F'\t' '{print $0}' ../seed1/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd.bed

awk -F'\t' '{print $0}' ../seed1/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INV>" | bedtools sort -i - > inv.bed

awk -F'\t' '{print $0}' ../seed1/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup.bed

awk -F'\t' '{print $0}' ../seed1/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INS>" | bedtools sort -i - > ins-fp.bed


awk -F'\t' '{print $0}' ../seed1_ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DEL>" | bedtools sort -i - > del-fp.bed

awk -F'\t' '{print $0}' ../seed1_ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<BND>" | bedtools sort -i - > bnd-fp.bed

awk -F'\t' '{print $0}' ../seed1_ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INV>" | bedtools sort -i - > inv-fp.bed

awk -F'\t' '{print $0}' ../seed1_ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<DUP>" | bedtools sort -i - > dup-fp.bed

awk -F'\t' '{print $0}' ../seed1_ins/delly/hg19m_SV.DWGSIM-mm-hg19m-delly.removedN.bed | grep "<INS>" | bedtools sort -i - > ins.bed


# Analysis
cd nanovar
echo "NanoVar" > ../radar_info.txt

# Loop command (Copy and paste)
echo "DEL" >> ../radar_info.txt
bedtools intersect -wa -wb -a del.bed -b ../../../homo/combine1/del_sv_wide400.bed > del-tp.bed
# Recall
cut -f 10 del-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 del-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 del.bed | sort | uniq) <(cut -f 6 del-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a bnd.bed -b ../../../homo/combine1/bnd_sv_wide400.bed > bnd-tp.bed
echo "BND" >> ../radar_info.txt
# Recall
cut -f 10 bnd-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 bnd-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 bnd.bed | sort | uniq) <(cut -f 6 bnd-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a inv.bed -b ../../../homo/combine1/inv_sv_wide400.bed > inv-tp.bed
echo "INV" >> ../radar_info.txt
# Recall
cut -f 10 inv-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 inv-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 inv.bed | sort | uniq) <(cut -f 6 inv-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a dup.bed -b ../../../homo/combine1/dup_sv_wide400.bed > dup-tp.bed
echo "DUP" >> ../radar_info.txt
# Recall
cut -f 10 dup-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 6 dup-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 dup.bed | sort | uniq) <(cut -f 6 dup-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt

bedtools intersect -wa -wb -a ins.bed -b ../../../homo/combine1/ins_sv_wide400.bed > ins-tp.bed
echo "INS" >> ../radar_info.txt
# Recall
cut -f 10 ins-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# Precision
cut -f 1-4 ins-tp.bed | sort | uniq | wc -l >> ../radar_info.txt
# divide by 
wc -l <(cut -f 6 ins.bed | sort | uniq) <(cut -f 6 ins-fp.bed | sort | uniq) >> ../radar_info.txt

echo -e "\n" >> ../radar_info.txt
# End loop


cd sniffles
echo "Sniffles" >> ../radar_info.txt
# Paste above

cd svim
echo "SVIM" >> ../radar_info.txt
# Paste above

cd nanoSV
echo "NanoSV" >> ../radar_info.txt
# Paste above

cd picky
echo "Picky" >> ../radar_info.txt
# Paste above

cd novobreak
echo "novoBreak" >> ../radar_info.txt
# Paste above

cd delly
echo "Delly" >> ../radar_info.txt
# Paste above


# Plot radar plots for F1 scores (Python commands)

import matplotlib.pyplot as plt
import matplotlib
import pandas as pd
from math import pi

# Set data (Precision and recall manually calculated from radar_info.txt)
df_homo = pd.DataFrame({
    'group': ['NanoVar','NanoSV','Sniffles','SVIM','Picky','novoBreak','Delly'],
    'DEL': [0.957, 0.081, 0.912, 0.749, 0.041, 0.661, 0.859],
    'INV': [0.660, 0.000, 0.708, 0.679, 0.763, 0.889, 0.905],
    'DUP': [0.854, 0.531, 0.601, 0.442, 0.674, 0.462, 0.631],
    'INS': [0.798, 0.236, 0.515, 0.577, 0.053, 0.000, 0.000],
    'BND': [0.881, 0.604, 0.760, 0.621, 0.545, 0.855, 0.922]
})

df_het = pd.DataFrame({
    'group': ['NanoVar','NanoSV','Sniffles','SVIM','Picky','novoBreak','Delly'],
    'DEL': [0.834, 0.008, 0.704, 0.652, 0.027, 0.650, 0.849],
    'INV': [0.704, 0.000, 0.571, 0.542, 0.627, 0.886, 0.912],
    'DUP': [0.812, 0.303, 0.494, 0.485, 0.537, 0.420, 0.633],
    'INS': [0.671, 0.084, 0.396, 0.347, 0.030, 0.000, 0.000],
    'BND': [0.725, 0.372, 0.572, 0.476, 0.305, 0.808, 0.917]
})

df_homo = df_homo[['group', 'DUP', 'DEL', 'INS', 'BND', 'INV']]
df_het = df_het[['group', 'DUP', 'DEL', 'INS', 'BND', 'INV']]

matplotlib.rcParams['axes.linewidth'] = 0.5

# Make radar plots (credits to https://python-graph-gallery.com/390-basic-radar-chart/)
def make_radar(row, title, color, df):
    hfont = {'fontname':'Arial'}
    # number of variable
    categories = list(df)[1:]
    N = len(categories)
    # What will be the angle of each axis in the plot? (we divide the plot / number of variable)
    angles = [n / float(N) * 2 * pi for n in range(N)]
    angles += angles[:1]
    # Initialise the spider plot
    ax = plt.subplot(3,3,row+1, polar=True, )
    # If you want the first axis to be on top:
    ax.set_theta_offset(pi / 2)
    ax.set_theta_direction(-1)
    # Draw one axe per variable + add labels labels yet
    plt.xticks(angles[:-1], categories, color='grey', size=4, **hfont)
    paddle = [-8,-5,-5,-5,-5]
    c = 0
    for tick in ax.get_xaxis().get_major_ticks():
        i = c
        tick.set_pad(paddle[i])
        #tick.label1 = tick._get_text1()
        c += 1
    # Draw ylabels
    ax.set_rlabel_position(0)
    plt.yticks([0.2,0.4,0.6,0.8], ["0.2","0.4","0.6","0.8"], color="grey", size=2.5, **hfont)
    plt.ylim(0,1)
    # Ind1
    values=df.loc[row].drop('group').values.flatten().tolist()
    values += values[:1]
    ax.plot(angles, values, color=color, linewidth=0.5, linestyle='solid')
    ax.fill(angles, values, color=color, alpha=0.4)
    # Add a title
    plt.title(title, size=6, color=color, y=1.03, **hfont)

# Initialize the figure
my_dpi=350
fig = plt.figure(figsize=(6.5, 3), dpi=my_dpi, frameon=True, linewidth=0.5)

# Create a color palette:
my_palette = ['mediumslateblue', '#ffd919', '#23a7e4', 'saddlebrown', '#3ca63b', 'crimson', 'darkorange']
 
# Loop to plot (Homozygous)
for row in range(0, len(df_homo.index)):
    make_radar(row=row, title=df_homo['group'][row], color=my_palette[row], df=df_homo)

# Loop to plot (Heterozygous)
# for row in range(0, len(df_het.index)):
#    make_radar(row=row, title=df_het['group'][row], color=my_palette[row], df=df_het)

hfont = {'fontname':'Arial'}
fig.tight_layout(rect=[0, 0, 1, 0.95])
fig.subplots_adjust(hspace=0.8)
plt.savefig('fig.svg', format='svg', dpi = 700)

